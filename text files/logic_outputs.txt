1011_0001_0000_1011 // LLB $R1 11
1011_0010_1111_1011 // LLB $R2 -5
0000_0011_0001_0010 // ADD $R3 $R1 $R2  
0001_0011_0001_0011 // SUB $R1 $R1 $R3 
0010_0001_0001_0000// NOR R1 R1 0
0011_0010_0001_0011// XOR R2 R1 R3
0100_0010_0010_0011// SLL R2 R3 3
0101_0010_0010_0011// SRA R2 R1 R3
0110_0010_0010_0011// ROR R2 R1 R3
1101_0000_0000_0111 // Call 13 
1111_0000_0000_0000	// halt instruction
1001_0000_0001_0000 // Call 16 
1000_111_0_0001_1101 // B 111 29 // branch to halt
0000_0000_0000_0000
0000_0000_0000_0000
0000_0000_0000_0000
0000_0000_0000_0000
1001_0001_0011_1111 // SW $R1 $R3 1  
1000_0111_0011_1111 // LW $R2 $R3 1  
1110_0000_1111_0000 // RET 15
1011_0101_0000_1011 // LLB $R5 0x0B   
1010_0101_1000_0000 // LHB $R5 0x80   
0010_0110_0001_0101 // SUB $R6 $R1 $R5
1100_111_0_0000_0010 // B 111 6 
0000_0000_0000_0000
0000_0000_0000_0000
1111_0000_0000_0000	// halt instruction







operation = 1011001011111011    //LLB
input1 = 0000000000000000
input2 = 0000000000000000  
result = 0000000011111011 

Reg1 = 0000000000001011 , Reg2 = 0000000011111011 , Reg3 = 0000000000000000 



operation = 0000001100010010    //ADD
input1 = 0000000000001011
input2 = 0000000011111011  
result = 0000000100000110 

Reg1 = 0000000000001011 , Reg2 = 0000000011111011 , Reg3 = 0000000100000110 


operation = 0001001100010011    //SUB
input1 = 0000000000001011
input2 = 0000000100000110  
result = 1111111100000101 

Reg1 = 0000000000001011 , Reg2 = 0000000011111011 , Reg3 = 1111111100000101 

 operation = 0010000100010000     //NOR
input1 = 0000000000001011
input2 = 0000000000000000  
result = 1111111111110100 

Reg1 = 1111111111110100 , Reg2 = 0000000011111011 , Reg3 = 1111111100000101 

 operation = 0011001000010011    //XOR
input1 = 1111111111110100
input2 = 1111111100000101  
result = 0000000011110001 

Reg1 = 1111111111110100 , Reg2 = 0000000011110001 , Reg3 = 1111111100000101 

 operation = 0100001000100011    //SLL
input1 = 0000000011110001
input2 = 1111111100000101  
result = 0000011110001000 

Reg1 = 1111111111110100 , Reg2 = 0000011110001000 , Reg3 = 1111111100000101 

 operation = 0101001000100011    //SRA
input1 = 0000011110001000
input2 = 1111111100000101  
result = 0000000011110001 

Reg1 = 1111111111110100 , Reg2 = 0000000011110001 , Reg3 = 1111111100000101 

 operation = 0110001000100011    ROR
input1 = 0000000011110001
input2 = 1111111100000101  
result = 0010000000011110 

Reg1 = 1111111111110100 , Reg2 = 0010000000011110 , Reg3 = 1111111100000101 

operation = 1101000000000111  // CALL 7
   
input1 = 0010000000011110
input2 = 1111111100000101  
result = 0000000000001010 

 operation = 1001000100111111 //SW $R1 $R3 1  
   
input1 = 1111111100000101
input2 = 0000000000001010  
result = 1111111100010100 

 operation = 1000011100111111 // LW $R2 $R3 1   
   
input1 = 1111111100000101
input2 = 0000000000001010  
result = 1111111100010100 
 

 operation = 1110000011110000 // RET 15

   
input1 = 0000000000001010
input2 = 0000000000001010  
result = 0000000000001010 

 operation = 1111000000000000  // HALT and print registers
   
input1 = 0000000000001010
input2 = 0000000000001010  
result = 0000000000001010 



Reg0 = 0000000000000000
Reg1 = 1111111111110100
Reg2 = 0010000000011110
Reg3 = 1111111100000101
Reg4 = 0000000000000000
Reg5 = 0000000000000000
Reg6 = 0000000000000000
Reg7 = xxxxxxxxxxxxxxxx
Reg8 = 0000000000000000
Reg9 = 0000000000000000
Reg10 = 0000000000000000
Reg11 = 0000000000000000
Reg12 = 0000000000000000
Reg13 = 0000000000000000
Reg14 = 0000000000000000
Reg15 = 0000000000001010
